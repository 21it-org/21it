#!/bin/bash

authkey="Ym9va19zZWFyY2guYXBwOmU2YmUyNzRjYjc0ZWUzNDgzOTc2NTdjOTM0ODYwNjc4Mjc0MmQ4NzUK"
IP_whitelisting=%%IP_whitelisting
IP_persistence="yes"
User_agent_persistence="yes"

# load small-shell params
. /var/www/descriptor/.small_shell_conf

# load header
if [ "$IP_persistence" = "yes" ];then
  remote_addr=`echo $REMOTE_ADDR | $SED "s/:/-/g"`
fi
if [ "$User_agent_persistence" = "yes" ];then
  user_agent=`echo $HTTP_USER_AGENT | $SED "s/:/-/g" | $SED "s/ /_/g"`
fi

# auth for small-shell databox
auth_req=`${small_shell_path}/bin/extension_auth key_auth:${authkey} remote_addr:${remote_addr} app:book_search user_agent:${user_agent}`
user_name="guest"
session=`echo $auth_req | $AWK -F "," '{print $2}' | $AWK -F ":" '{print $2}'`
pin=`echo $auth_req | $AWK -F "," '{print $3}' | $AWK -F ":" '{print $2}'`

# load remote addr
remote_addr=`echo $REMOTE_ADDR | $SED "s/:/-/g"`

# IP restriction check
if [ "$IP_whitelisting" = "yes" ];then
  whitelist_chk=`${small_shell_path}/bin/meta get.IP | grep -v "NO IP RESTRICTION"`
  if [ "$whitelist_chk" ];then
    for IP in $whitelist_chk
    do
      IP=`echo $IP | $SED "s/*//g"`
      if [[ ${remote_addr} == ${IP}* ]];then
        IP_chk=yes
        break
      fi
    done
   
    if [ ! "$IP_chk" = "yes" ];then
      echo "error: your IP is not allowed to access"
      exit 1
    fi
  fi
fi

param=`date +%s`
param="$param:$RANDOM"
count=1
while [ -f /var/www/tmp/${param} ]
do
 sleep 0.01
 count=`expr $count + 1`
 if [ $count -eq 100 ];then
   echo "error: please contact to adimin"
   exit 1
 fi
done

# parse QUERY_STRING
echo $QUERY_STRING | $PHP -r "echo urldecode(file_get_contents('php://stdin'));" | tr -d \$ | tr -d \` | $SED "s/\&/\n/g" > /var/www/tmp/${param}
cat /var/www/tmp/${param} | $SED -e "s/=/=\"/1" | $SED "s/$/\"/g" | $SED "s/^\"//g" > /var/www/tmp/${param}.load
chmod 755 /var/www/tmp/${param}.load

# load query string
.  /var/www/tmp/${param}.load
rm  /var/www/tmp/${param}*

if [ ! "$req" ];then
  req=main
fi

if [ "$subapp" ];then
  if [ ! "$req" = "main" -a ! "$req" = "logout" ];then
    req="${subapp}.$req"
  fi
fi

# define contents type except statistics file or graph
if [[ ! "$req" == *stats && ! "$req" == *file ]];then
  echo "Content-Type: text/html"
  echo ""
fi

# dump POST data
if [ "`echo $REQUEST_METHOD | grep -i "POST"`" ];then

  if [ "`echo $CONTENT_TYPE | grep "application/json"`" ];then
    method=json
  elif [ "`echo $CONTENT_TYPE | grep "multipart/form-data"`" ];then
    method=multipart
  elif [ "`echo $CONTENT_TYPE | grep "application/octet-stream"`" ];then
    method=data-binary
  else
    method=urlenc
  fi

  mkdir /var/www/tmp/$session
  # dump posted data
  dd bs=${CONTENT_LENGTH} of=/var/www/tmp/$session/input 2>/dev/null
  /var/www/bin/parse.sh $session $method

fi

#----------------------------
# routing to action scripts
#----------------------------

case "$req" in
  
  "main")
    /var/www/bin/book_search_main.sh session:$session pin:$pin user_name:$user_name remote_addr:${remote_addr};;

  "get")
    /var/www/bin/book_search_get.sh session:$session pin:$pin user_name:$user_name id:$id duplicate:$duplicate;;

  "set")
    /var/www/bin/book_search_set.sh session:$session pin:$pin user_name:$user_name id:$id;;

  "table")
    table_command="`echo $table_command | $SED "s/ /{%%space}/g"`"
    /var/www/bin/book_search_table.sh session:$session pin:$pin user_name:$user_name id:$id page:$page table_command:$table_command line:$line;;

  "log_viewer")
    /var/www/bin/book_search_log_viewer.sh session:$session pin:$pin user_name:$user_name id:$id ;;

  "file")
    /var/www/bin/book_search_dl.sh session:$session pin:$pin user_name:$user_name id:$id ;;


   #--------------------------------
   # sub app routing section
  "location_search.table") /var/www/bin/location_search_table.sh session:$session pin:$pin user_name:$user_name page:$page table_command:$table_command line:$line;;
  "location_search.get") /var/www/bin/location_search_get.sh session:$session pin:$pin user_name:$user_name id:$id duplicate:$duplicate;;
  "location_search.set") /var/www/bin/location_search_set.sh session:$session pin:$pin user_name:$user_name id:$id;;
  "location_search.del") /var/www/bin/location_search_del.sh session:$session pin:$pin user_name:$user_name id:$id;;
  "location_search.log_viewer") /var/www/bin/location_search_log_viewer.sh session:$session pin:$pin id:$id;;
  "location_search.file") /var/www/bin/location_search_dl.sh session:$session pin:$pin id:$id;;
   #--------------------------------


  *)
    echo "error: wrong request";;

esac

exit 0
